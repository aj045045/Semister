Name :Ansh Yadav
Course :Msc(cs)-2
Assignment :2[Pointers and Pointer Using Function]
Sub :Advance Programming
Roll.no :36

/*******************************************************************************************************************
[6] Write a program using pointers to implement the matrix multiplication.
*******************************************************************************************************************/

#include <stdio.h>
#define ROW 3
#define COL 3

void matrixInput(int mat[][COL]);
void matrixPrint(int mat[][COL]);
void matrixMultiply(int mat1[][COL], int mat2[][COL], int res[][COL]);

int main()
{
    int mat1[ROW][COL];
    int mat2[ROW][COL];
    int product[ROW][COL];


    printf("Enter elements in first matrix of size %dx%d\n", ROW, COL);
    matrixInput(mat1);

    printf("Enter elements in second matrix of size %dx%d\n", ROW, COL);
    matrixInput(mat2);


    matrixMultiply(mat1, mat2, product);


  printf("Product of both matrices is : \n");
    matrixPrint(product);

    return 0;
}

void matrixInput(int mat[][COL])
{
    int row, col;

    for (row = 0; row < ROW; row++)
    {
        for (col = 0; col < COL; col++)
        {
            scanf("%d", (*(mat + row) + col));
        }
    }
}

void matrixPrint(int mat[][COL])
{
    int row, col;

    for (row = 0; row < ROW; row++)
    {
        for (col = 0; col < COL; col++)
        {
            printf("%d ", *(*(mat + row) + col));
        }

        printf("\n");
    }
}


void matrixMultiply(int mat1[][COL], int mat2[][COL], int res[][COL])
{
    int row, col, i;
    int sum;


    for (row = 0; row < ROW; row++)
    {
        for (col = 0; col < COL; col++)
        {
            sum = 0;

            for (i = 0; i < COL; i++)
            {
                sum += (*(*(mat1 + row) + i)) * (*(*(mat2 + i) + col));
            }


            *(*(res + row) + col) = sum;
        }
    }
}


/*********************************************************************************************************************
OUTPUT:
********************************************************************************************************************/
Enter elements in first matrix of size 3x3
1
2
3
4
5
6
7
8
9
Enter elements in second matrix of size 3x3
11
12
13
14
15
16
17
18
19
Product of both matrices is : 
90 96 102 
216 231 246 
342 366 390 













